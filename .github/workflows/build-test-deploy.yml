name: Build and Deploy

on:
  push:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  dist: dist/${{ github.event.repository.name }}

jobs:
  build-and-deploy:
    name: Build and Deploy ⚒️🚀
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2

      - name: Install ⬇️
        run: npm ci

      - name: Build 🔧
        run: npm run build -- --base-href /${{ github.event.repository.name }}/

      - name: Test 🧪
        run: npm test -- --browsers=Headless --no-watch

      - name: Fallback to index.html 🔁
        run: cp ${{ env.dist }}/index.html ${{ env.dist }}/404.html

      - name: Setup Pages 📃
        if: github.ref == 'refs/heads/main'
        uses: actions/configure-pages@v1

      - name: Upload artifact ⬆️
        uses: actions/upload-pages-artifact@v1
        with:
          path: ${{ env.dist }}

      - uses: actions/create-release@v1
        id: create_release
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ${{ runner.temp }}/artifact.tar
          asset_name: artifact.tar
          asset_content_type: application/tar

      - name: Deploy to GitHub Pages 🚀
        id: deployment
        if: github.ref == 'refs/heads/main'
        uses: actions/deploy-pages@v1
